{"version":3,"sources":["pages/assets/MorganRileyT2022.pdf","components/NavTabs.js","pages/assets/images/MJGR.jpg","pages/assets/images/tessellation.jpg","pages/Home.js","pages/assets/images/BeecomingMe.png","pages/assets/images/NoteTaker.png","pages/assets/images/OfflineBudget.png","pages/assets/images/pwgen.png","pages/assets/images/WDWMWT.png","pages/assets/images/WeatherDashboard.png","pages/assets/images/WorkDayScheduler.png","pages/Portfolio.js","components/PortfolioContainer.js","App.js","reportWebVitals.js","index.js"],"names":["NavTabs","currentPage","handlePageChange","className","href","onClick","ResumePDF","target","rel","Home","class","src","backGround","MJGR","alt","Portfolio","classname","Card","style","width","Img","variant","beecomingMe","Body","Title","Text","WDWMWT","weatherDashboard","workDayScheduler","offlineBudget","noteTaker","pwgen","PortfolioContainer","useState","setCurrentPage","page","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.991531a1.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/MorganRileyT2022.2c56d8c4.pdf\";","import React from 'react';\nimport ResumePDF from '../pages/assets/MorganRileyT2022.pdf'\n\n// Here we are using object destructuring assignment to pull out our variables from the props object\n// We assign them to their own variable names\nfunction NavTabs({ currentPage, handlePageChange }) {\n  return (\n    <ul className=\"nav nav-tabs\">\n      <li className=\"nav-item\">\n        <a\n          href=\"#home\"\n          onClick={() => handlePageChange('Home')}\n          // This is a conditional (ternary) operator that checks to see if the current page is \"Home\"\n          // If it is, we set the current page to 'nav-link-active', otherwise we set it to 'nav-link'\n          className={currentPage === 'Home' ? 'nav-link active' : 'nav-link'}\n        >\n          Home\n        </a>\n      </li>\n      {/* <li className=\"nav-item\">\n        <a\n          href=\"#about\"\n          onClick={() => handlePageChange('About')}\n          // Check to see if the currentPage is `About`, and if so we use the active link class from bootstrap. Otherwise, we set it to a normal nav-link\n          className={currentPage === 'About' ? 'nav-link active' : 'nav-link'}\n        >\n          About\n        </a>\n      </li> */}\n      <li className=\"nav-item\">\n        <a\n          href=\"#portfolio\"\n          onClick={() => handlePageChange('Portfolio')}\n          // Check to see if the currentPage is `Portfolio`, and if so we use the active link class from bootstrap. Otherwise, we set it to a normal nav-link\n          className={currentPage === 'Portfolio' ? 'nav-link active' : 'nav-link'}\n        >\n          Portfolio\n        </a>\n      </li>\n      <li className=\"nav-item\">\n        <a\n          href={ResumePDF}\n          //onClick={() => handlePageChange('Resume')}\n          // Check to see if the currentPage is `Resume`, and if so we use the active link class from bootstrap. Otherwise, we set it to a normal nav-link\n          className='nav-link'\n          target=\"_blank\"\n          rel=\"noreferrer noopener\"\n        >\n          Resume\n        </a>\n      </li>\n      <li className=\"nav-item\">\n        <a\n          href=\"mailto:MJGRiley@gmail.com\"\n          className='nav-link'\n        >\n          Contact\n        </a>\n      </li>\n      {/* <li className=\"nav-item\">\n        <a\n          href=\"https://github.com/MJGRiley\"\n          // Check to see if the currentPage is `Contact`, and if so we use the active link class from bootstrap. Otherwise, we set it to a normal nav-link\n          className='nav-link'\n        >\n          GitHub: MJGRiley\n        </a>\n      </li> */}\n    </ul>\n  );\n}\n\nexport default NavTabs;\n","export default __webpack_public_path__ + \"static/media/MJGR.a25e45fe.jpg\";","export default __webpack_public_path__ + \"static/media/tessellation.da2f0b02.jpg\";","import React from \"react\";\nimport MJGR from \"./assets/images/MJGR.jpg\"\nimport backGround from \"./assets/images/tessellation.jpg\"\nimport \"./assets/css/Home.css\"\nexport default function Home() {\n  return (\n    <div class=\"wrapper\">\n      <img class=\"background\" src={backGround} />\n      <img class=\"MJGR\" src={MJGR} alt=\"Morgan Riley\"/>\n      <h1>Morgan Jon Giles Riley</h1>\n      <h3>Full Stack Web Developer</h3>\n      <div class=\"p\">\n        Motivated Georgia Tech full stack web developer with skills in React,\n        Javascript ES6, and SQL/NoSQL databases. Ten year background in\n        public-facing tech support and currently focused on agile app\n        development and building knowledge base with new technologies. Creative\n        problem solver, eager learner and natural helper with honed\n        interpersonal skills and talent for leading when required. Eager to use\n        technical skills and collaborative nature to write cleaner code,\n        identify errors, and help teams develop innovative solutions.\n      </div>\n      <ul>\n        <li><a href=\"https://github.com/MJGRiley\"><img className=\"avatar\" src=\"https://avatars.githubusercontent.com/u/9919?s=60&v=4\" alt=\"GitHub\" /></a></li>\n        <li>LinkedIn</li>\n        <li>Gmail</li>\n      </ul>\n    </div>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/BeecomingMe.d45fc602.png\";","export default __webpack_public_path__ + \"static/media/NoteTaker.230c991d.png\";","export default __webpack_public_path__ + \"static/media/OfflineBudget.bca28327.png\";","export default __webpack_public_path__ + \"static/media/pwgen.aa25cbf8.png\";","export default __webpack_public_path__ + \"static/media/WDWMWT.3451cc79.png\";","export default __webpack_public_path__ + \"static/media/WeatherDashboard.32e23a2b.png\";","export default __webpack_public_path__ + \"static/media/WorkDayScheduler.5c223203.png\";","import React from \"react\";\nimport beecomingMe from \"./assets/images/BeecomingMe.png\";\nimport noteTaker from \"./assets/images/NoteTaker.png\";\nimport offlineBudget from \"./assets/images/OfflineBudget.png\";\nimport pwgen from \"./assets/images/pwgen.png\";\nimport WDWMWT from \"./assets/images/WDWMWT.png\";\nimport weatherDashboard from \"./assets/images/WeatherDashboard.png\";\nimport workDayScheduler from \"./assets/images/WorkDayScheduler.png\";\nimport Card from \"react-bootstrap/Card\";\nimport backGround from \"./assets/images/tessellation.jpg\"\nimport \"./assets/css/Portfolio.css\";\n\nexport default function Portfolio() {\n  return (\n    <div classname=\"container\">\n      <img class=\"background\" src={backGround} />\n      <ul className=\"row\">\n        {/* <li className=\"col\"\n      <Card style={{ width: \"18rem\" }}>\n        <a href=\"TODO:\">\n          <Card.Img variant=\"top\" src={TODO:} alt=\"TODO:\" />\n        </a>\n        <Card.Body>\n          <Card.Title>TODO:</Card.Title>\n          <Card.Text>TODO:</Card.Text>\n        </Card.Body>\n      </Card> \n      </li>*/}\n        <li className=\"col\">\n          <Card style={{ width: \"18rem\" }}>\n            <a href=\"http://beecomingme.com\">\n              <Card.Img variant=\"top\" src={beecomingMe} alt=\"BeecomingMe\" />\n            </a>\n            <Card.Body>\n              <Card.Title>BeecomingMe - <a href=\"https://github.com/courtbourt12/beecomingme\"><img className=\"avatar\" src=\"https://avatars.githubusercontent.com/u/9919?s=60&v=4\" alt=\"GitHub\" /></a></Card.Title>\n              <Card.Text>\n                Beecoming Me allows its users to create, break-down, and track\n                goals in a mobile-first designed platform. The main feature of\n                this web application is the user can add an accountability\n                partner so they have support with their goals.\n                <h6>\n                  <strong>Features:</strong>\n                </h6>\n                User authentication, password hashing, final product will be CRUD\n                <h6>\n                  <strong>Technologies Used:</strong>\n                </h6>\n                MERN, Apollo GraphQL, SCSS, Bootstrap, deployed to Heroku using\n                MongoDB Atlas with a custom domain.\n              </Card.Text>\n            </Card.Body>\n          </Card>\n        </li>\n        <li className=\"col\">\n          <Card style={{ width: \"18rem\" }}>\n            <a href=\"http://magical-wait-times.herokuapp.com/\">\n              <Card.Img variant=\"top\" src={WDWMWT} alt=\"Magical Wait Times\" />\n            </a>\n            <Card.Body>\n              <Card.Title>Magical Wait Times - <a href=\"https://github.com/MJGRiley/Magical-Wait-Times\"><img className=\"avatar\" src=\"https://avatars.githubusercontent.com/u/9919?s=60&v=4\" alt=\"GitHub\" /></a></Card.Title>\n              <Card.Text>\n                After login or Register the user is taken to a map of Walt Disney World to select which land they would like to check out.\n                Each land page has a list of its rides and each has the current wait time next to it. Users can leave their experience about \n                <h6>\n                  <strong>Features:</strong>\n                </h6>\n                MVC structure, area selection on an image, \n                <h6>\n                  <strong>Technologies Used:</strong>\n                </h6>\n                Node.js, Express.js, Handlebars, Javascript, Sequelize, bcrypt, cloudinary, heroku.\n              </Card.Text>\n            </Card.Body>\n          </Card>\n        </li>\n        <li className=\"col\">\n          <Card style={{ width: \"18rem\" }}>\n            <a href=\"https://mjgriley.github.io/Weather-Dashboard/\">\n              <Card.Img\n                variant=\"top\"\n                src={weatherDashboard}\n                alt=\"Weather Dashboard\"\n              />\n            </a>\n            <Card.Body>\n              <Card.Title>Weather Dashboard - <a href=\"https://github.com/MJGRiley/Weather-Dashboard\"><img className=\"avatar\" src=\"https://avatars.githubusercontent.com/u/9919?s=60&v=4\" alt=\"GitHub\" /></a></Card.Title>\n              <Card.Text>\n                Searches Open Weather API for user Input city name. Displays 5\n                day forecast & current day\n              </Card.Text>\n            </Card.Body>\n          </Card>\n        </li>\n        <li className=\"col\">\n          <Card style={{ width: \"18rem\" }}>\n            <a href=\"https://mjgriley.github.io/Work-Day-Scheduler/\">\n              <Card.Img\n                variant=\"top\"\n                src={workDayScheduler}\n                alt=\"Work Day Scheduler\"\n              />\n            </a>\n            <Card.Body>\n              <Card.Title>Work Day Scheduler - <a href=\"https://github.com/MJGRiley/Work-Day-Scheduler\"><img className=\"avatar\" src=\"https://avatars.githubusercontent.com/u/9919?s=60&v=4\" alt=\"GitHub\" /></a></Card.Title>\n              <Card.Text>\n                User is presented with a schedule including 9 text inputs, one\n                for each hour; date at the top. The text input fields change\n                color with the hour to keep the user on track. This website will\n                save the user's schedule they've input when the blue save icon\n                is clicked. It maintains a copy on local storage incase they\n                close the window and need to come back to it.\n              </Card.Text>\n            </Card.Body>\n          </Card>\n        </li>\n        <li className=\"col\">\n          <Card style={{ width: \"18rem\" }}>\n            <a href=\"https://github.com/MJGRiley/Offline-Budget-Tracker\">\n              <Card.Img\n                variant=\"top\"\n                src={offlineBudget}\n                alt=\"Offline Budget Tracker\"\n              />\n            </a>\n            <Card.Body>\n              <Card.Title>Offline Budget Tracker - <a href=\"https://github.com/MJGRiley/Offline-Budget-Tracker\"><img className=\"avatar\" src=\"https://avatars.githubusercontent.com/u/9919?s=60&v=4\" alt=\"GitHub\" /></a></Card.Title>\n              <Card.Text>\n                AS AN avid traveller I WANT to be able to track my withdrawals\n                and deposits with or without a data/internet connection SO THAT\n                I know how much money I have to spend\n              </Card.Text>\n            </Card.Body>\n          </Card>\n        </li>\n        <li className=\"col\">\n          <Card style={{ width: \"18rem\" }}>\n            <a href=\"https://note-taker-mjgr.herokuapp.com/\">\n              <Card.Img variant=\"top\" src={noteTaker} alt=\"Note Taker\" />\n            </a>\n            <Card.Body>\n              <Card.Title>Express Note Taker - <a href=\"https://github.com/MJGRiley/Note-Taker\"><img className=\"avatar\" src=\"https://avatars.githubusercontent.com/u/9919?s=60&v=4\" alt=\"GitHub\" /></a></Card.Title>\n              <Card.Text>\n                This site is a virtual notepad. Click to enter and notes will be\n                saved to a database. Notes will be loaded from the last session.\n              </Card.Text>\n            </Card.Body>\n          </Card>\n        </li>\n        <li className=\"col\">\n          <Card style={{ width: \"18rem\" }}>\n            <a href=\"https://mjgriley.github.io/Password-Generator/\">\n              <Card.Img variant=\"top\" src={pwgen} alt=\"Password Generator\" />\n            </a>\n            <Card.Body>\n              <Card.Title>Password Generator - <a href=\"https://github.com/MJGRiley/Password-Generator\"><img className=\"avatar\" src=\"https://avatars.githubusercontent.com/u/9919?s=60&v=4\" alt=\"GitHub\" /></a></Card.Title>\n              <Card.Text>\n                At button click prompt the user for length of password desired.\n                Prompt user which characters to inclue: Uppercase, Lowercase,\n                Numbers, Special Generates characters from types of characters\n                selected at desired length.\n              </Card.Text>\n            </Card.Body>\n          </Card>\n        </li>\n      </ul>\n    </div>\n  );\n}\n","import React, { useState } from 'react';\nimport NavTabs from './NavTabs';\nimport Home from '../pages/Home';\nimport About from '../pages/About';\nimport Portfolio from '../pages/Portfolio';\n\nexport default function PortfolioContainer() {\n  const [currentPage, setCurrentPage] = useState('Home');\n\n  // This method is checking to see what the value of `currentPage` is. Depending on the value of currentPage, we return the corresponding component to render.\n  const renderPage = () => {\n    if (currentPage === 'Home') {\n      return <Home />;\n    }\n    // if (currentPage === 'About') {\n    //   return <About />;\n    // }\n    return <Portfolio />;\n  };\n\n  const handlePageChange = (page) => setCurrentPage(page);\n\n  return (\n    <div>\n      {/* We are passing the currentPage from state and the function to update it */}\n      <NavTabs currentPage={currentPage} handlePageChange={handlePageChange} />\n      {/* Here we are calling the renderPage method which will return a component  */}\n      {renderPage()}\n    </div>\n  );\n}\n","import React from \"react\"\nimport PortfolioContainer from \"./components/PortfolioContainer\"\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport './App.css';\n\nconst App = () => <PortfolioContainer />;\n//   return (\n//   This is the foursquare API key fsq3nicE2ccIM9Zuu5Ai0WnkEEKgDO2wYuyRyIMvsqT8KsI=\n//   );\n// }\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}